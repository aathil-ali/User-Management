# Local Development Docker Compose
# Run the full stack locally: frontend, backend, and databases

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: user-mgmt-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-user_management}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../../backend/database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dev-network

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: user-mgmt-mongo-dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-user_profiles}
    ports:
      - "27017:27017"
    volumes:
      - mongo_dev_data:/data/db
      - ../../backend/database/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://admin:password@localhost:27017/admin --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - dev-network

  # Backend API (Development Mode with Hot Reload)
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: user-mgmt-backend-dev
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-8000}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-user_management}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      MONGODB_URI: mongodb://${MONGO_USER:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/${MONGO_DB:-user_profiles}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-not-for-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev-refresh-secret-not-for-production}
      JWT_EXPIRE: ${JWT_EXPIRE:-1h}
      JWT_REFRESH_EXPIRE: ${JWT_REFRESH_EXPIRE:-7d}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-en}
      SUPPORTED_LANGUAGES: ${SUPPORTED_LANGUAGES:-en,es,fr}
      USE_MOCK_DB: ${USE_MOCK_DB:-false}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ../../backend/src:/app/src
      - ../../backend/package.json:/app/package.json
      - ../../backend/tsconfig.json:/app/tsconfig.json
      - ../../backend/nodemon.json:/app/nodemon.json
      - ../../backend/.env.example:/app/.env.example
      - /app/node_modules  # Anonymous volume for node_modules
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App (Development Mode with Hot Reload)
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.dev
    container_name: user-mgmt-frontend-dev
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
      VITE_API_PROXY_TARGET: http://backend:8000
      VITE_APP_NAME: ${VITE_APP_NAME:-User Management System}
      VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0-dev}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ../../frontend/src:/app/src
      - ../../frontend/public:/app/public
      - ../../frontend/package.json:/app/package.json
      - ../../frontend/vite.config.ts:/app/vite.config.ts
      - ../../frontend/tsconfig.json:/app/tsconfig.json
      - ../../frontend/tailwind.config.js:/app/tailwind.config.js
      - ../../frontend/postcss.config.js:/app/postcss.config.js
      - ../../frontend/index.html:/app/index.html
      - /app/node_modules  # Anonymous volume for node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - dev-network
    stdin_open: true
    tty: true

volumes:
  postgres_dev_data:
    driver: local
  mongo_dev_data:
    driver: local

networks:
  dev-network:
    driver: bridge
    name: user-mgmt-dev-network