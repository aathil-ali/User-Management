version: '3.8'

services:
  # Frontend - Nginx serving React build
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.prod
    container_name: user-mgmt-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.prod
    container_name: user-mgmt-backend
    environment:
      NODE_ENV: production
      PORT: 8000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: user_management
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MONGODB_URI: mongodb://mongo:27017/user_profiles
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}

    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy

    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: user-mgmt-postgres
    environment:
      POSTGRES_DB: user_management
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../backend/database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: user-mgmt-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: user_profiles
    volumes:
      - mongo_data:/data/db
      - ../../backend/database/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${MONGO_USER}:${MONGO_PASSWORD}@localhost:27017/admin --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network



volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local


networks:
  app-network:
    driver: bridge