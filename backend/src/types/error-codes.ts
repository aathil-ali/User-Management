/**
 * Comprehensive Error Codes for the User Management System
 * 
 * Format: CATEGORY_SPECIFIC_DESCRIPTION
 * - CATEGORY: AUTH, USER, VALIDATION, DATABASE, EXTERNAL, etc.
 * - SPECIFIC: Specific error type within category
 * - DESCRIPTION: Brief description of the error
 */

export enum ErrorCode {
  // Authentication Errors (AUTH_*)
  AUTH_INVALID_CREDENTIALS = 'AUTH_INVALID_CREDENTIALS',
  AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED',
  AUTH_TOKEN_INVALID = 'AUTH_TOKEN_INVALID',
  AUTH_TOKEN_MISSING = 'AUTH_TOKEN_MISSING',
  AUTH_REFRESH_TOKEN_INVALID = 'AUTH_REFRESH_TOKEN_INVALID',
  AUTH_SESSION_EXPIRED = 'AUTH_SESSION_EXPIRED',
  AUTH_ACCOUNT_LOCKED = 'AUTH_ACCOUNT_LOCKED',
  AUTH_ACCOUNT_SUSPENDED = 'AUTH_ACCOUNT_SUSPENDED',
  AUTH_EMAIL_NOT_VERIFIED = 'AUTH_EMAIL_NOT_VERIFIED',
  AUTH_ACCOUNT_NOT_VERIFIED = 'AUTH_ACCOUNT_NOT_VERIFIED',
  AUTH_ACCOUNT_DISABLED = 'AUTH_ACCOUNT_DISABLED',
  AUTH_USER_NOT_FOUND = 'AUTH_USER_NOT_FOUND',
  AUTH_PASSWORD_RESET_REQUIRED = 'AUTH_PASSWORD_RESET_REQUIRED',
  AUTH_TWO_FACTOR_REQUIRED = 'AUTH_TWO_FACTOR_REQUIRED',

  // Authorization Errors (AUTHZ_*)
  AUTHZ_INSUFFICIENT_PERMISSIONS = 'AUTHZ_INSUFFICIENT_PERMISSIONS',
  AUTHZ_ADMIN_REQUIRED = 'AUTHZ_ADMIN_REQUIRED',
  AUTHZ_RESOURCE_ACCESS_DENIED = 'AUTHZ_RESOURCE_ACCESS_DENIED',
  AUTHZ_OPERATION_NOT_ALLOWED = 'AUTHZ_OPERATION_NOT_ALLOWED',
  AUTHZ_ROLE_REQUIRED = 'AUTHZ_ROLE_REQUIRED',
  AUTHZ_SCOPE_INSUFFICIENT = 'AUTHZ_SCOPE_INSUFFICIENT',

  // Validation Errors (VALIDATION_*)
  VALIDATION_FAILED = 'VALIDATION_FAILED',
  VALIDATION_EMAIL_INVALID = 'VALIDATION_EMAIL_INVALID',
  VALIDATION_EMAIL_REQUIRED = 'VALIDATION_EMAIL_REQUIRED',
  VALIDATION_EMAIL_ALREADY_EXISTS = 'VALIDATION_EMAIL_ALREADY_EXISTS',
  VALIDATION_PASSWORD_REQUIRED = 'VALIDATION_PASSWORD_REQUIRED',
  VALIDATION_PASSWORD_TOO_WEAK = 'VALIDATION_PASSWORD_TOO_WEAK',
  VALIDATION_PASSWORD_WEAK = 'VALIDATION_PASSWORD_WEAK',
  VALIDATION_PASSWORD_TOO_SHORT = 'VALIDATION_PASSWORD_TOO_SHORT',
  VALIDATION_NAME_REQUIRED = 'VALIDATION_NAME_REQUIRED',
  VALIDATION_NAME_TOO_LONG = 'VALIDATION_NAME_TOO_LONG',
  VALIDATION_FIELD_REQUIRED = 'VALIDATION_FIELD_REQUIRED',
  VALIDATION_FIELD_INVALID = 'VALIDATION_FIELD_INVALID',
  VALIDATION_FORMAT_INVALID = 'VALIDATION_FORMAT_INVALID',
  VALIDATION_VALUE_OUT_OF_RANGE = 'VALIDATION_VALUE_OUT_OF_RANGE',

  // User Management Errors (USER_*)
  USER_NOT_FOUND = 'USER_NOT_FOUND',
  USER_ALREADY_EXISTS = 'USER_ALREADY_EXISTS',
  USER_PROFILE_NOT_FOUND = 'USER_PROFILE_NOT_FOUND',
  USER_ACCOUNT_DELETED = 'USER_ACCOUNT_DELETED',
  USER_ACCOUNT_INACTIVE = 'USER_ACCOUNT_INACTIVE',
  USER_UPDATE_FAILED = 'USER_UPDATE_FAILED',
  USER_CREATION_FAILED = 'USER_CREATION_FAILED',
  USER_DELETION_FAILED = 'USER_DELETION_FAILED',
  USER_PREFERENCES_INVALID = 'USER_PREFERENCES_INVALID',

  // Database Errors (DB_*)
  DB_CONNECTION_FAILED = 'DB_CONNECTION_FAILED',
  DB_QUERY_FAILED = 'DB_QUERY_FAILED',
  DB_TRANSACTION_FAILED = 'DB_TRANSACTION_FAILED',
  DB_CONSTRAINT_VIOLATION = 'DB_CONSTRAINT_VIOLATION',
  DB_DUPLICATE_ENTRY = 'DB_DUPLICATE_ENTRY',
  DB_TIMEOUT = 'DB_TIMEOUT',
  DB_UNAVAILABLE = 'DB_UNAVAILABLE',
  DB_MIGRATION_FAILED = 'DB_MIGRATION_FAILED',
  DB_POOL_EXHAUSTED = 'DB_POOL_EXHAUSTED',

  // External Service Errors (EXT_*)
  EXT_SERVICE_UNAVAILABLE = 'EXT_SERVICE_UNAVAILABLE',
  EXT_SERVICE_TIMEOUT = 'EXT_SERVICE_TIMEOUT',
  EXT_SERVICE_RATE_LIMITED = 'EXT_SERVICE_RATE_LIMITED',
  EXT_SERVICE_AUTH_FAILED = 'EXT_SERVICE_AUTH_FAILED',
  EXT_SERVICE_INVALID_RESPONSE = 'EXT_SERVICE_INVALID_RESPONSE',
  EXT_EMAIL_SERVICE_FAILED = 'EXT_EMAIL_SERVICE_FAILED',
  EXT_SMS_SERVICE_FAILED = 'EXT_SMS_SERVICE_FAILED',
  EXT_STORAGE_SERVICE_FAILED = 'EXT_STORAGE_SERVICE_FAILED',

  // Rate Limiting Errors (RATE_*)
  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',
  RATE_LIMIT_AUTH_EXCEEDED = 'RATE_LIMIT_AUTH_EXCEEDED',
  RATE_LIMIT_LOGIN_ATTEMPTS = 'RATE_LIMIT_LOGIN_ATTEMPTS',
  RATE_LIMIT_PASSWORD_RESET = 'RATE_LIMIT_PASSWORD_RESET',
  RATE_LIMIT_API_CALLS = 'RATE_LIMIT_API_CALLS',

  // Resource Errors (RESOURCE_*)
  RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND',
  RESOURCE_ALREADY_EXISTS = 'RESOURCE_ALREADY_EXISTS',
  RESOURCE_LOCKED = 'RESOURCE_LOCKED',
  RESOURCE_EXPIRED = 'RESOURCE_EXPIRED',
  RESOURCE_CORRUPTED = 'RESOURCE_CORRUPTED',
  RESOURCE_TOO_LARGE = 'RESOURCE_TOO_LARGE',

  // System Errors (SYSTEM_*)
  SYSTEM_INTERNAL_ERROR = 'SYSTEM_INTERNAL_ERROR',
  SYSTEM_MAINTENANCE = 'SYSTEM_MAINTENANCE',
  SYSTEM_OVERLOADED = 'SYSTEM_OVERLOADED',
  SYSTEM_CONFIGURATION_ERROR = 'SYSTEM_CONFIGURATION_ERROR',
  SYSTEM_DEPENDENCY_FAILED = 'SYSTEM_DEPENDENCY_FAILED',

  // Business Logic Errors (BUSINESS_*)
  BUSINESS_RULE_VIOLATION = 'BUSINESS_RULE_VIOLATION',
  BUSINESS_OPERATION_NOT_ALLOWED = 'BUSINESS_OPERATION_NOT_ALLOWED',
  BUSINESS_STATE_INVALID = 'BUSINESS_STATE_INVALID',
  BUSINESS_QUOTA_EXCEEDED = 'BUSINESS_QUOTA_EXCEEDED',
  BUSINESS_FEATURE_DISABLED = 'BUSINESS_FEATURE_DISABLED',

  // Network/Communication Errors (NETWORK_*)
  NETWORK_TIMEOUT = 'NETWORK_TIMEOUT',
  NETWORK_UNAVAILABLE = 'NETWORK_UNAVAILABLE',
  NETWORK_DNS_FAILED = 'NETWORK_DNS_FAILED',
  NETWORK_SSL_ERROR = 'NETWORK_SSL_ERROR',
  NETWORK_PROXY_ERROR = 'NETWORK_PROXY_ERROR',

  // Security Errors (SECURITY_*)
  SECURITY_SUSPICIOUS_ACTIVITY = 'SECURITY_SUSPICIOUS_ACTIVITY',
  SECURITY_BRUTE_FORCE_DETECTED = 'SECURITY_BRUTE_FORCE_DETECTED',
  SECURITY_MALICIOUS_REQUEST = 'SECURITY_MALICIOUS_REQUEST',
  SECURITY_XSS_DETECTED = 'SECURITY_XSS_DETECTED',
  SECURITY_SQL_INJECTION_DETECTED = 'SECURITY_SQL_INJECTION_DETECTED',
  SECURITY_CSRF_TOKEN_INVALID = 'SECURITY_CSRF_TOKEN_INVALID',

  // Generic/Unknown Errors
  UNKNOWN_ERROR = 'UNKNOWN_ERROR',
  NOT_IMPLEMENTED = 'NOT_IMPLEMENTED',
}

/**
 * Error Code Metadata - Additional information for each error code
 */
export interface ErrorCodeMetadata {
  httpStatus: number;
  category: string;
  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';
  retryable: boolean;
  userFacing: boolean;
  logLevel: 'debug' | 'info' | 'warn' | 'error' | 'fatal';
  requiresAlert: boolean;
}

/**
 * Error Code Registry - Maps error codes to their metadata
 */
export const ERROR_CODE_REGISTRY: Record<ErrorCode, ErrorCodeMetadata> = {
  // Authentication Errors
  [ErrorCode.AUTH_INVALID_CREDENTIALS]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_TOKEN_EXPIRED]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'LOW',
    retryable: true,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_TOKEN_INVALID]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_TOKEN_MISSING]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_REFRESH_TOKEN_INVALID]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_SESSION_EXPIRED]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'LOW',
    retryable: true,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_ACCOUNT_LOCKED]: {
    httpStatus: 423,
    category: 'Authentication',
    severity: 'HIGH',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: true,
  },
  [ErrorCode.AUTH_ACCOUNT_SUSPENDED]: {
    httpStatus: 403,
    category: 'Authentication',
    severity: 'HIGH',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: true,
  },
  [ErrorCode.AUTH_EMAIL_NOT_VERIFIED]: {
    httpStatus: 403,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_PASSWORD_RESET_REQUIRED]: {
    httpStatus: 403,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_TWO_FACTOR_REQUIRED]: {
    httpStatus: 403,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_ACCOUNT_NOT_VERIFIED]: {
    httpStatus: 403,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.AUTH_ACCOUNT_DISABLED]: {
    httpStatus: 403,
    category: 'Authentication',
    severity: 'HIGH',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: true,
  },
  [ErrorCode.AUTH_USER_NOT_FOUND]: {
    httpStatus: 401,
    category: 'Authentication',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },

  // Authorization Errors
  [ErrorCode.AUTHZ_INSUFFICIENT_PERMISSIONS]: {
    httpStatus: 403,
    category: 'Authorization',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTHZ_ADMIN_REQUIRED]: {
    httpStatus: 403,
    category: 'Authorization',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTHZ_RESOURCE_ACCESS_DENIED]: {
    httpStatus: 403,
    category: 'Authorization',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTHZ_OPERATION_NOT_ALLOWED]: {
    httpStatus: 403,
    category: 'Authorization',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTHZ_ROLE_REQUIRED]: {
    httpStatus: 403,
    category: 'Authorization',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.AUTHZ_SCOPE_INSUFFICIENT]: {
    httpStatus: 403,
    category: 'Authorization',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },

  // Validation Errors
  [ErrorCode.VALIDATION_FAILED]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_EMAIL_INVALID]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_EMAIL_REQUIRED]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_EMAIL_ALREADY_EXISTS]: {
    httpStatus: 409,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_PASSWORD_REQUIRED]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_PASSWORD_TOO_WEAK]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_PASSWORD_WEAK]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_PASSWORD_TOO_SHORT]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_NAME_REQUIRED]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_NAME_TOO_LONG]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_FIELD_REQUIRED]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_FIELD_INVALID]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_FORMAT_INVALID]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.VALIDATION_VALUE_OUT_OF_RANGE]: {
    httpStatus: 400,
    category: 'Validation',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },

  // User Management Errors
  [ErrorCode.USER_NOT_FOUND]: {
    httpStatus: 404,
    category: 'User',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.USER_ALREADY_EXISTS]: {
    httpStatus: 409,
    category: 'User',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.USER_PROFILE_NOT_FOUND]: {
    httpStatus: 404,
    category: 'User',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.USER_ACCOUNT_DELETED]: {
    httpStatus: 410,
    category: 'User',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.USER_ACCOUNT_INACTIVE]: {
    httpStatus: 403,
    category: 'User',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.USER_UPDATE_FAILED]: {
    httpStatus: 500,
    category: 'User',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.USER_CREATION_FAILED]: {
    httpStatus: 500,
    category: 'User',
    severity: 'HIGH',
    retryable: true,
    userFacing: true,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.USER_DELETION_FAILED]: {
    httpStatus: 500,
    category: 'User',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.USER_PREFERENCES_INVALID]: {
    httpStatus: 400,
    category: 'User',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },

  // Database Errors
  [ErrorCode.DB_CONNECTION_FAILED]: {
    httpStatus: 503,
    category: 'Database',
    severity: 'CRITICAL',
    retryable: true,
    userFacing: false,
    logLevel: 'fatal',
    requiresAlert: true,
  },
  [ErrorCode.DB_QUERY_FAILED]: {
    httpStatus: 500,
    category: 'Database',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.DB_TRANSACTION_FAILED]: {
    httpStatus: 500,
    category: 'Database',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.DB_CONSTRAINT_VIOLATION]: {
    httpStatus: 409,
    category: 'Database',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.DB_DUPLICATE_ENTRY]: {
    httpStatus: 409,
    category: 'Database',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.DB_TIMEOUT]: {
    httpStatus: 504,
    category: 'Database',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.DB_UNAVAILABLE]: {
    httpStatus: 503,
    category: 'Database',
    severity: 'CRITICAL',
    retryable: true,
    userFacing: false,
    logLevel: 'fatal',
    requiresAlert: true,
  },
  [ErrorCode.DB_MIGRATION_FAILED]: {
    httpStatus: 500,
    category: 'Database',
    severity: 'CRITICAL',
    retryable: false,
    userFacing: false,
    logLevel: 'fatal',
    requiresAlert: true,
  },
  [ErrorCode.DB_POOL_EXHAUSTED]: {
    httpStatus: 503,
    category: 'Database',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },

  // External Service Errors
  [ErrorCode.EXT_SERVICE_UNAVAILABLE]: {
    httpStatus: 503,
    category: 'External',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.EXT_SERVICE_TIMEOUT]: {
    httpStatus: 504,
    category: 'External',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: false,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.EXT_SERVICE_RATE_LIMITED]: {
    httpStatus: 429,
    category: 'External',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: false,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.EXT_SERVICE_AUTH_FAILED]: {
    httpStatus: 502,
    category: 'External',
    severity: 'HIGH',
    retryable: false,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.EXT_SERVICE_INVALID_RESPONSE]: {
    httpStatus: 502,
    category: 'External',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: false,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.EXT_EMAIL_SERVICE_FAILED]: {
    httpStatus: 502,
    category: 'External',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.EXT_SMS_SERVICE_FAILED]: {
    httpStatus: 502,
    category: 'External',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.EXT_STORAGE_SERVICE_FAILED]: {
    httpStatus: 502,
    category: 'External',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: false,
    logLevel: 'warn',
    requiresAlert: false,
  },

  // Rate Limiting Errors
  [ErrorCode.RATE_LIMIT_EXCEEDED]: {
    httpStatus: 429,
    category: 'RateLimit',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.RATE_LIMIT_AUTH_EXCEEDED]: {
    httpStatus: 429,
    category: 'RateLimit',
    severity: 'HIGH',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: true,
  },
  [ErrorCode.RATE_LIMIT_LOGIN_ATTEMPTS]: {
    httpStatus: 429,
    category: 'RateLimit',
    severity: 'HIGH',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: true,
  },
  [ErrorCode.RATE_LIMIT_PASSWORD_RESET]: {
    httpStatus: 429,
    category: 'RateLimit',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.RATE_LIMIT_API_CALLS]: {
    httpStatus: 429,
    category: 'RateLimit',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },

  // Resource Errors
  [ErrorCode.RESOURCE_NOT_FOUND]: {
    httpStatus: 404,
    category: 'Resource',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.RESOURCE_ALREADY_EXISTS]: {
    httpStatus: 409,
    category: 'Resource',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.RESOURCE_LOCKED]: {
    httpStatus: 423,
    category: 'Resource',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.RESOURCE_EXPIRED]: {
    httpStatus: 410,
    category: 'Resource',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.RESOURCE_CORRUPTED]: {
    httpStatus: 500,
    category: 'Resource',
    severity: 'HIGH',
    retryable: false,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.RESOURCE_TOO_LARGE]: {
    httpStatus: 413,
    category: 'Resource',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },

  // System Errors
  [ErrorCode.SYSTEM_INTERNAL_ERROR]: {
    httpStatus: 500,
    category: 'System',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.SYSTEM_MAINTENANCE]: {
    httpStatus: 503,
    category: 'System',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
  [ErrorCode.SYSTEM_OVERLOADED]: {
    httpStatus: 503,
    category: 'System',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.SYSTEM_CONFIGURATION_ERROR]: {
    httpStatus: 500,
    category: 'System',
    severity: 'CRITICAL',
    retryable: false,
    userFacing: false,
    logLevel: 'fatal',
    requiresAlert: true,
  },
  [ErrorCode.SYSTEM_DEPENDENCY_FAILED]: {
    httpStatus: 503,
    category: 'System',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },

  // Business Logic Errors
  [ErrorCode.BUSINESS_RULE_VIOLATION]: {
    httpStatus: 422,
    category: 'Business',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.BUSINESS_OPERATION_NOT_ALLOWED]: {
    httpStatus: 403,
    category: 'Business',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.BUSINESS_STATE_INVALID]: {
    httpStatus: 409,
    category: 'Business',
    severity: 'MEDIUM',
    retryable: false,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.BUSINESS_QUOTA_EXCEEDED]: {
    httpStatus: 429,
    category: 'Business',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: true,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.BUSINESS_FEATURE_DISABLED]: {
    httpStatus: 501,
    category: 'Business',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },

  // Network/Communication Errors
  [ErrorCode.NETWORK_TIMEOUT]: {
    httpStatus: 504,
    category: 'Network',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: false,
    logLevel: 'warn',
    requiresAlert: false,
  },
  [ErrorCode.NETWORK_UNAVAILABLE]: {
    httpStatus: 503,
    category: 'Network',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.NETWORK_DNS_FAILED]: {
    httpStatus: 503,
    category: 'Network',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.NETWORK_SSL_ERROR]: {
    httpStatus: 502,
    category: 'Network',
    severity: 'HIGH',
    retryable: false,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.NETWORK_PROXY_ERROR]: {
    httpStatus: 502,
    category: 'Network',
    severity: 'MEDIUM',
    retryable: true,
    userFacing: false,
    logLevel: 'warn',
    requiresAlert: false,
  },

  // Security Errors
  [ErrorCode.SECURITY_SUSPICIOUS_ACTIVITY]: {
    httpStatus: 403,
    category: 'Security',
    severity: 'HIGH',
    retryable: false,
    userFacing: true,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.SECURITY_BRUTE_FORCE_DETECTED]: {
    httpStatus: 429,
    category: 'Security',
    severity: 'CRITICAL',
    retryable: false,
    userFacing: true,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.SECURITY_MALICIOUS_REQUEST]: {
    httpStatus: 400,
    category: 'Security',
    severity: 'HIGH',
    retryable: false,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.SECURITY_XSS_DETECTED]: {
    httpStatus: 400,
    category: 'Security',
    severity: 'HIGH',
    retryable: false,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.SECURITY_SQL_INJECTION_DETECTED]: {
    httpStatus: 400,
    category: 'Security',
    severity: 'CRITICAL',
    retryable: false,
    userFacing: false,
    logLevel: 'fatal',
    requiresAlert: true,
  },
  [ErrorCode.SECURITY_CSRF_TOKEN_INVALID]: {
    httpStatus: 403,
    category: 'Security',
    severity: 'HIGH',
    retryable: false,
    userFacing: true,
    logLevel: 'error',
    requiresAlert: true,
  },

  // Generic/Unknown Errors
  [ErrorCode.UNKNOWN_ERROR]: {
    httpStatus: 500,
    category: 'Unknown',
    severity: 'HIGH',
    retryable: true,
    userFacing: false,
    logLevel: 'error',
    requiresAlert: true,
  },
  [ErrorCode.NOT_IMPLEMENTED]: {
    httpStatus: 501,
    category: 'System',
    severity: 'LOW',
    retryable: false,
    userFacing: true,
    logLevel: 'info',
    requiresAlert: false,
  },
};
